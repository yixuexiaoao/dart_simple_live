# =================================================================================
# GitHub Actions Workflow: 发布 TV App Release 版本
# 优化版本 by 资深Android开发与代码审查专家
#
# 优化点:
# 1. (重要) 移除了 'checkout' 中的 'ref: master'，确保构建的是触发标签所在的代码。
# 2. 使用 'working-directory' 替代 'cd' 命令，使脚本更健壮、更清晰。
# 3. 在上传产物时使用通配符路径，以适应未来可能的变化。
# =================================================================================

name: Publish TV App Release

# 推送 'tv_*' 格式的Tag时触发
on:
  push:
    tags:
      - "tv_*"
  workflow_dispatch: # 允许手动触发

jobs:
  build-and-release-tv: # Job名称更具描述性
    name: Build and Release TV App
    runs-on: macos-latest
    permissions:
      contents: write # 'softprops/action-gh-release' 需要此权限来创建Release

    steps:
      # 步骤1: 签出代码
      # <--- 优化点1: 移除 ref: master，让 action 自动检出触发事件的 tag
      - name: Checkout repository at tag
        uses: actions/checkout@v4
        
      # 步骤2: APK签名设置 (保持不变，已是最佳实践)
      - name: Download Android keystore
        id: android_tv_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: keystore.jks
          encodedString: ${{ secrets.TV_KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_tv_keystore.outputs.filePath }}" > simple_live_tv_app/android/key.properties
          echo "storePassword=${{ secrets.TV_STORE_PASSWORD }}" >> simple_live_tv_app/android/key.properties
          echo "keyPassword=${{ secrets.TV_KEY_PASSWORD }}" >> simple_live_tv_app/android/key.properties
          echo "keyAlias=${{ secrets.TV_KEY_ALIAS }}" >> simple_live_tv_app/android/key.properties

      # 步骤3: 设置JAVA环境 (保持不变，已是正确配置)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: "gradle"
    
      # 步骤4: 设置Flutter环境 (保持不变)
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true

      # 步骤5: 获取Flutter依赖包
      # <--- 优化点2: 使用 working-directory 替代 cd
      - name: Get Flutter dependencies
        working-directory: ./simple_live_tv_app
        run: flutter pub get
        
      # 步骤6: 打包APK
      # <--- 优化点2: 使用 working-directory 替代 cd
      - name: Build release APK
        working-directory: ./simple_live_tv_app
        run: flutter build apk --release --split-per-abi
    
      # 步骤7: 上传APK至Artifacts
      # <--- 优化点3: 使用通配符使路径更健壮
      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android_tv-apks
          path: simple_live_tv_app/build/app/outputs/flutter-apk/app-*-release.apk
    
      # 步骤8: 读取版本信息 (保持不变)
      - name: Read version information
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/tv_app_version.json # 确保这个路径相对于仓库根目录是正确的
      - name: Echo version details
        run: |
          echo "Version: ${{ fromJson(steps.version.outputs.content).version }}"
          echo "Description: ${{ fromJson(steps.version.outputs.content).version_desc }}"
    
      # 步骤9: 创建并上传至GitHub Release
      # <--- 优化点3: 使用通配符使路径更健壮
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2 # 建议使用最新的 v2 版本
        with:
          name: "Version ${{ fromJson(steps.version.outputs.content).version }}"
          body: |
            # Android TV Release
            ${{ fromJson(steps.version.outputs.content).version_desc }}
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          files: simple_live_tv_app/build/app/outputs/flutter-apk/app-*-release.apk
        
      # 步骤10: 完成
      - name: Job Summary
        run: echo "🍏 This job's status is ${{ job.status }}."

